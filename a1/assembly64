
reverse-me.64:     file format elf64-x86-64


Disassembly of section .init:

0000000000400488 <_init>:
  400488:	48 83 ec 08          	sub    $0x8,%rsp
  40048c:	48 8b 05 65 0b 20 00 	mov    0x200b65(%rip),%rax        # 600ff8 <__gmon_start__>
  400493:	48 85 c0             	test   %rax,%rax
  400496:	74 05                	je     40049d <_init+0x15>
  400498:	e8 63 00 00 00       	callq  400500 <__gmon_start__@plt>
  40049d:	48 83 c4 08          	add    $0x8,%rsp
  4004a1:	c3                   	retq   

Disassembly of section .plt:

00000000004004b0 <.plt>:
  4004b0:	ff 35 52 0b 20 00    	pushq  0x200b52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004b6:	ff 25 54 0b 20 00    	jmpq   *0x200b54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004c0 <strlen@plt>:
  4004c0:	ff 25 52 0b 20 00    	jmpq   *0x200b52(%rip)        # 601018 <strlen@GLIBC_2.2.5>
  4004c6:	68 00 00 00 00       	pushq  $0x0
  4004cb:	e9 e0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 4a 0b 20 00    	jmpq   *0x200b4a(%rip)        # 601020 <printf@GLIBC_2.2.5>
  4004d6:	68 01 00 00 00       	pushq  $0x1
  4004db:	e9 d0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004e0 <__libc_start_main@plt>:
  4004e0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601028 <__libc_start_main@GLIBC_2.2.5>
  4004e6:	68 02 00 00 00       	pushq  $0x2
  4004eb:	e9 c0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004f0 <strcmp@plt>:
  4004f0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601030 <strcmp@GLIBC_2.2.5>
  4004f6:	68 03 00 00 00       	pushq  $0x3
  4004fb:	e9 b0 ff ff ff       	jmpq   4004b0 <.plt>

0000000000400500 <__gmon_start__@plt>:
  400500:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601038 <__gmon_start__>
  400506:	68 04 00 00 00       	pushq  $0x4
  40050b:	e9 a0 ff ff ff       	jmpq   4004b0 <.plt>

0000000000400510 <sprintf@plt>:
  400510:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601040 <sprintf@GLIBC_2.2.5>
  400516:	68 05 00 00 00       	pushq  $0x5
  40051b:	e9 90 ff ff ff       	jmpq   4004b0 <.plt>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 20 09 40 00 	mov    $0x400920,%r8
  400536:	48 c7 c1 b0 08 40 00 	mov    $0x4008b0,%rcx
  40053d:	48 c7 c7 90 07 40 00 	mov    $0x400790,%rdi
  400544:	e8 97 ff ff ff       	callq  4004e0 <__libc_start_main@plt>
  400549:	f4                   	hlt    
  40054a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400550 <deregister_tm_clones>:
  400550:	b8 67 10 60 00       	mov    $0x601067,%eax
  400555:	55                   	push   %rbp
  400556:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  40055c:	48 83 f8 0e          	cmp    $0xe,%rax
  400560:	48 89 e5             	mov    %rsp,%rbp
  400563:	76 1b                	jbe    400580 <deregister_tm_clones+0x30>
  400565:	b8 00 00 00 00       	mov    $0x0,%eax
  40056a:	48 85 c0             	test   %rax,%rax
  40056d:	74 11                	je     400580 <deregister_tm_clones+0x30>
  40056f:	5d                   	pop    %rbp
  400570:	bf 60 10 60 00       	mov    $0x601060,%edi
  400575:	ff e0                	jmpq   *%rax
  400577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40057e:	00 00 
  400580:	5d                   	pop    %rbp
  400581:	c3                   	retq   
  400582:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  400589:	1f 84 00 00 00 00 00 

0000000000400590 <register_tm_clones>:
  400590:	be 60 10 60 00       	mov    $0x601060,%esi
  400595:	55                   	push   %rbp
  400596:	48 81 ee 60 10 60 00 	sub    $0x601060,%rsi
  40059d:	48 c1 fe 03          	sar    $0x3,%rsi
  4005a1:	48 89 e5             	mov    %rsp,%rbp
  4005a4:	48 89 f0             	mov    %rsi,%rax
  4005a7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005ab:	48 01 c6             	add    %rax,%rsi
  4005ae:	48 d1 fe             	sar    %rsi
  4005b1:	74 15                	je     4005c8 <register_tm_clones+0x38>
  4005b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b8:	48 85 c0             	test   %rax,%rax
  4005bb:	74 0b                	je     4005c8 <register_tm_clones+0x38>
  4005bd:	5d                   	pop    %rbp
  4005be:	bf 60 10 60 00       	mov    $0x601060,%edi
  4005c3:	ff e0                	jmpq   *%rax
  4005c5:	0f 1f 00             	nopl   (%rax)
  4005c8:	5d                   	pop    %rbp
  4005c9:	c3                   	retq   
  4005ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005d0 <__do_global_dtors_aux>:
  4005d0:	80 3d 85 0a 20 00 00 	cmpb   $0x0,0x200a85(%rip)        # 60105c <_edata>
  4005d7:	75 11                	jne    4005ea <__do_global_dtors_aux+0x1a>
  4005d9:	55                   	push   %rbp
  4005da:	48 89 e5             	mov    %rsp,%rbp
  4005dd:	e8 6e ff ff ff       	callq  400550 <deregister_tm_clones>
  4005e2:	5d                   	pop    %rbp
  4005e3:	c6 05 72 0a 20 00 01 	movb   $0x1,0x200a72(%rip)        # 60105c <_edata>
  4005ea:	f3 c3                	repz retq 
  4005ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005f0 <frame_dummy>:
  4005f0:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005f5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4005f9:	75 05                	jne    400600 <frame_dummy+0x10>
  4005fb:	eb 93                	jmp    400590 <register_tm_clones>
  4005fd:	0f 1f 00             	nopl   (%rax)
  400600:	b8 00 00 00 00       	mov    $0x0,%eax
  400605:	48 85 c0             	test   %rax,%rax
  400608:	74 f1                	je     4005fb <frame_dummy+0xb>
  40060a:	55                   	push   %rbp
  40060b:	48 89 e5             	mov    %rsp,%rbp
  40060e:	ff d0                	callq  *%rax
  400610:	5d                   	pop    %rbp
  400611:	e9 7a ff ff ff       	jmpq   400590 <register_tm_clones>
  400616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40061d:	00 00 00 

0000000000400620 <checkEasy>:
  400620:	55                   	push   %rbp
  400621:	48 89 e5             	mov    %rsp,%rbp
  400624:	48 83 ec 10          	sub    $0x10,%rsp
  400628:	48 b8 40 09 40 00 00 	movabs $0x400940,%rax
  40062f:	00 00 00 
  400632:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400636:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40063a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40063e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400642:	e8 a9 fe ff ff       	callq  4004f0 <strcmp@plt>
  400647:	3d 00 00 00 00       	cmp    $0x0,%eax
  40064c:	0f 95 c1             	setne  %cl
  40064f:	80 f1 01             	xor    $0x1,%cl
  400652:	80 e1 01             	and    $0x1,%cl
  400655:	0f b6 c1             	movzbl %cl,%eax
  400658:	48 83 c4 10          	add    $0x10,%rsp
  40065c:	5d                   	pop    %rbp
  40065d:	c3                   	retq   
  40065e:	66 90                	xchg   %ax,%ax

0000000000400660 <checkMedium>:
  400660:	55                   	push   %rbp
  400661:	48 89 e5             	mov    %rsp,%rbp
  400664:	48 83 ec 40          	sub    $0x40,%rsp
  400668:	48 be 49 09 40 00 00 	movabs $0x400949,%rsi
  40066f:	00 00 00 
  400672:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  400676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40067a:	8b 0c 25 4c 10 60 00 	mov    0x60104c,%ecx
  400681:	03 0c 25 50 10 60 00 	add    0x601050,%ecx
  400688:	03 0c 25 54 10 60 00 	add    0x601054,%ecx
  40068f:	03 0c 25 58 10 60 00 	add    0x601058,%ecx
  400696:	48 89 c7             	mov    %rax,%rdi
  400699:	89 ca                	mov    %ecx,%edx
  40069b:	b0 00                	mov    $0x0,%al
  40069d:	e8 6e fe ff ff       	callq  400510 <sprintf@plt>
  4006a2:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  4006a6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4006aa:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4006ad:	e8 3e fe ff ff       	callq  4004f0 <strcmp@plt>
  4006b2:	3d 00 00 00 00       	cmp    $0x0,%eax
  4006b7:	41 0f 95 c0          	setne  %r8b
  4006bb:	41 80 f0 01          	xor    $0x1,%r8b
  4006bf:	41 80 e0 01          	and    $0x1,%r8b
  4006c3:	41 0f b6 c0          	movzbl %r8b,%eax
  4006c7:	48 83 c4 40          	add    $0x40,%rsp
  4006cb:	5d                   	pop    %rbp
  4006cc:	c3                   	retq   
  4006cd:	0f 1f 00             	nopl   (%rax)

00000000004006d0 <checkHard>:
  4006d0:	55                   	push   %rbp
  4006d1:	48 89 e5             	mov    %rsp,%rbp
  4006d4:	48 83 ec 30          	sub    $0x30,%rsp
  4006d8:	48 b8 4c 09 40 00 00 	movabs $0x40094c,%rax
  4006df:	00 00 00 
  4006e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4006ea:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  4006f1:	81 7d e0 09 00 00 00 	cmpl   $0x9,-0x20(%rbp)
  4006f8:	0f 8d 6b 00 00 00    	jge    400769 <checkHard+0x99>
  4006fe:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  400702:	e8 b9 fd ff ff       	callq  4004c0 <strlen@plt>
  400707:	89 c1                	mov    %eax,%ecx
  400709:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  40070c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40070f:	0f af 4d e0          	imul   -0x20(%rbp),%ecx
  400713:	81 f1 77 df 56 6f    	xor    $0x6f56df77,%ecx
  400719:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40071c:	81 7d e0 08 00 00 00 	cmpl   $0x8,-0x20(%rbp)
  400723:	0f 8d 22 00 00 00    	jge    40074b <checkHard+0x7b>
  400729:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40072c:	31 d2                	xor    %edx,%edx
  40072e:	f7 75 dc             	divl   -0x24(%rbp)
  400731:	89 d0                	mov    %edx,%eax
  400733:	89 c1                	mov    %eax,%ecx
  400735:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400739:	40 8a 3c 0e          	mov    (%rsi,%rcx,1),%dil
  40073d:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  400741:	40 88 7c 0d e7       	mov    %dil,-0x19(%rbp,%rcx,1)
  400746:	e9 09 00 00 00       	jmpq   400754 <checkHard+0x84>
  40074b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  40074f:	c6 44 05 e7 00       	movb   $0x0,-0x19(%rbp,%rax,1)
  400754:	e9 00 00 00 00       	jmpq   400759 <checkHard+0x89>
  400759:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40075c:	05 01 00 00 00       	add    $0x1,%eax
  400761:	89 45 e0             	mov    %eax,-0x20(%rbp)
  400764:	e9 88 ff ff ff       	jmpq   4006f1 <checkHard+0x21>
  400769:	48 8d 75 e7          	lea    -0x19(%rbp),%rsi
  40076d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  400771:	e8 7a fd ff ff       	callq  4004f0 <strcmp@plt>
  400776:	3d 00 00 00 00       	cmp    $0x0,%eax
  40077b:	0f 95 c1             	setne  %cl
  40077e:	80 f1 01             	xor    $0x1,%cl
  400781:	80 e1 01             	and    $0x1,%cl
  400784:	0f b6 c1             	movzbl %cl,%eax
  400787:	48 83 c4 30          	add    $0x30,%rsp
  40078b:	5d                   	pop    %rbp
  40078c:	c3                   	retq   
  40078d:	0f 1f 00             	nopl   (%rax)

0000000000400790 <main>:
  400790:	55                   	push   %rbp
  400791:	48 89 e5             	mov    %rsp,%rbp
  400794:	48 83 ec 30          	sub    $0x30,%rsp
  400798:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40079f:	89 7d f8             	mov    %edi,-0x8(%rbp)
  4007a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4007a6:	81 7d f8 02 00 00 00 	cmpl   $0x2,-0x8(%rbp)
  4007ad:	0f 84 27 00 00 00    	je     4007da <main+0x4a>
  4007b3:	48 bf 67 09 40 00 00 	movabs $0x400967,%rdi
  4007ba:	00 00 00 
  4007bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4007c1:	48 8b 30             	mov    (%rax),%rsi
  4007c4:	b0 00                	mov    $0x0,%al
  4007c6:	e8 05 fd ff ff       	callq  4004d0 <printf@plt>
  4007cb:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4007d2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4007d5:	e9 ca 00 00 00       	jmpq   4008a4 <main+0x114>
  4007da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4007de:	48 8b 78 08          	mov    0x8(%rax),%rdi
  4007e2:	e8 39 fe ff ff       	callq  400620 <checkEasy>
  4007e7:	a8 01                	test   $0x1,%al
  4007e9:	0f 85 05 00 00 00    	jne    4007f4 <main+0x64>
  4007ef:	e9 19 00 00 00       	jmpq   40080d <main+0x7d>
  4007f4:	48 bf 7d 09 40 00 00 	movabs $0x40097d,%rdi
  4007fb:	00 00 00 
  4007fe:	b0 00                	mov    $0x0,%al
  400800:	e8 cb fc ff ff       	callq  4004d0 <printf@plt>
  400805:	89 45 e8             	mov    %eax,-0x18(%rbp)
  400808:	e9 90 00 00 00       	jmpq   40089d <main+0x10d>
  40080d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400811:	48 8b 78 08          	mov    0x8(%rax),%rdi
  400815:	e8 46 fe ff ff       	callq  400660 <checkMedium>
  40081a:	a8 01                	test   $0x1,%al
  40081c:	0f 85 05 00 00 00    	jne    400827 <main+0x97>
  400822:	e9 19 00 00 00       	jmpq   400840 <main+0xb0>
  400827:	48 bf ac 09 40 00 00 	movabs $0x4009ac,%rdi
  40082e:	00 00 00 
  400831:	b0 00                	mov    $0x0,%al
  400833:	e8 98 fc ff ff       	callq  4004d0 <printf@plt>
  400838:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40083b:	e9 58 00 00 00       	jmpq   400898 <main+0x108>
  400840:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400844:	48 8b 78 08          	mov    0x8(%rax),%rdi
  400848:	e8 83 fe ff ff       	callq  4006d0 <checkHard>
  40084d:	a8 01                	test   $0x1,%al
  40084f:	0f 85 05 00 00 00    	jne    40085a <main+0xca>
  400855:	e9 19 00 00 00       	jmpq   400873 <main+0xe3>
  40085a:	48 bf db 09 40 00 00 	movabs $0x4009db,%rdi
  400861:	00 00 00 
  400864:	b0 00                	mov    $0x0,%al
  400866:	e8 65 fc ff ff       	callq  4004d0 <printf@plt>
  40086b:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40086e:	e9 20 00 00 00       	jmpq   400893 <main+0x103>
  400873:	48 bf 0a 0a 40 00 00 	movabs $0x400a0a,%rdi
  40087a:	00 00 00 
  40087d:	b0 00                	mov    $0x0,%al
  40087f:	e8 4c fc ff ff       	callq  4004d0 <printf@plt>
  400884:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  40088b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40088e:	e9 11 00 00 00       	jmpq   4008a4 <main+0x114>
  400893:	e9 00 00 00 00       	jmpq   400898 <main+0x108>
  400898:	e9 00 00 00 00       	jmpq   40089d <main+0x10d>
  40089d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4008a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4008a7:	48 83 c4 30          	add    $0x30,%rsp
  4008ab:	5d                   	pop    %rbp
  4008ac:	c3                   	retq   
  4008ad:	0f 1f 00             	nopl   (%rax)

00000000004008b0 <__libc_csu_init>:
  4008b0:	41 57                	push   %r15
  4008b2:	41 56                	push   %r14
  4008b4:	41 89 ff             	mov    %edi,%r15d
  4008b7:	41 55                	push   %r13
  4008b9:	41 54                	push   %r12
  4008bb:	4c 8d 25 4e 05 20 00 	lea    0x20054e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4008c2:	55                   	push   %rbp
  4008c3:	48 8d 2d 4e 05 20 00 	lea    0x20054e(%rip),%rbp        # 600e18 <__init_array_end>
  4008ca:	53                   	push   %rbx
  4008cb:	49 89 f6             	mov    %rsi,%r14
  4008ce:	49 89 d5             	mov    %rdx,%r13
  4008d1:	4c 29 e5             	sub    %r12,%rbp
  4008d4:	48 83 ec 08          	sub    $0x8,%rsp
  4008d8:	48 c1 fd 03          	sar    $0x3,%rbp
  4008dc:	e8 a7 fb ff ff       	callq  400488 <_init>
  4008e1:	48 85 ed             	test   %rbp,%rbp
  4008e4:	74 20                	je     400906 <__libc_csu_init+0x56>
  4008e6:	31 db                	xor    %ebx,%ebx
  4008e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4008ef:	00 
  4008f0:	4c 89 ea             	mov    %r13,%rdx
  4008f3:	4c 89 f6             	mov    %r14,%rsi
  4008f6:	44 89 ff             	mov    %r15d,%edi
  4008f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4008fd:	48 83 c3 01          	add    $0x1,%rbx
  400901:	48 39 eb             	cmp    %rbp,%rbx
  400904:	75 ea                	jne    4008f0 <__libc_csu_init+0x40>
  400906:	48 83 c4 08          	add    $0x8,%rsp
  40090a:	5b                   	pop    %rbx
  40090b:	5d                   	pop    %rbp
  40090c:	41 5c                	pop    %r12
  40090e:	41 5d                	pop    %r13
  400910:	41 5e                	pop    %r14
  400912:	41 5f                	pop    %r15
  400914:	c3                   	retq   
  400915:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40091c:	00 00 00 00 

0000000000400920 <__libc_csu_fini>:
  400920:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400924 <_fini>:
  400924:	48 83 ec 08          	sub    $0x8,%rsp
  400928:	48 83 c4 08          	add    $0x8,%rsp
  40092c:	c3                   	retq   
